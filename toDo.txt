affichage :
    -bug protrait lors de l'évolution
    -systeme de log in

contenu :
    -ajouter des potimons
    -ajouter des skills
    -faire des cartes cohérentes

balance :
    -revoir la fusion
    -QTE -> systeme de difficulté, design de la bar, comment ça impact les effets
    -taux d'apparition -> modification du modèle

serveur :
    -données utilisateur en base, schema de base de données,
    -systeme de log in
    -calcul coté serveur?
    -crypté les données

bonnes pratiques :    
    - spliter en 2 dossiers client/serveurs
    - res.json
/*
Libs included:
    underscore lodash chai sinon sinon-chai mocha async request q bluebird jsdom
*/

/routes
    /index.js
    /pokemon.js 
/database
    /index.js
    /connection.js
    /models
        /pokemon.js
        /users.js
/middlewares


// entrypoint index.js

const app = express();
const routes = require('./routes');
const connection = require('connection.js');

connection.init()
    .then((res) => {
        console.log('Connection success !');
    })
    .catch((err) => console.log(err))

app.use('/', routes);


// /routes/index.js
const router = express().Router
const pokemonRoutes = require('./pokemon.js');

router.use('/pokemons', pokemon);

// /routes/pokemon.js

const router = express().Router
const pokemonDb = require('../database/pokemon.js')

router.use('/list', (req, res) => {
    
    // load from database
    pokemonDb.getAll()
        .then((pokemons) => {    
            res.json(pokemons)
        })
        .catch((err) => {
            res.status(500).json(err)
        })
})

// database/index.js
// https://www.npmjs.com/package/promise-mysql

const mysql = require('promise-mysql');
let connection = null;

function init() {
    return mysql.createConnection({
        host: 'localhost',
        user: 'sauron',
        password: 'theonetruering',
        database: 'mordor'
    }).then(function(conn){
        // do stuff with conn
        connection = conn;
        conn.end();
    });
}

function getConnection(){
    return connection;
}

module.exports = {
    init,
    getConnection
}

// /database/pokemon.js
const connection = require('./connection');

module.exports = {
    getAll: function(){
        return connection.query('SELECT * ...');
    }
}

    